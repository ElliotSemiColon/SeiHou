Issues to do with scaling: 

	- boss' bullets move too fast at small resolutions

		let bullets do the modifying of perameters, not the emitter
		the issue before was the emitter and the bullet were both modifying the speed of the bullets, this was fixed by setting up a scaling value in bullet 
		getting rid of the scaler in the emitter class was also important 

		solution:

		the issue was to do with the bullet being fed a scaled property, but adjusting it once more in its own class, causing innacuracies

		changes:

		emitter.js
		ln 38, 39 (update), 69 (playerShootUpdate)
		replaced this.radius*this.playArea.height/983 with this.radius which gave the bullets non-scaled input
		this will allow them to adjust their speed within their own class with the next changes
		
		bullet.js
		ln 40 (constructor)
		addition of this.scaler = this.playArea.height/938; allowing adjustment of values based on ratio between play area height and ideal play are height at 1080p with default scailing 
		ln 41
		changed this.speed* this.playArea.height/938 to this.speed*this.scaler; in line with the above change
		ln 48 (draw)
		multiplied radius by scaler
		ln 51 
		multiplied linewidth by scaler
		ln 59-61
		added resize function which deletes bullets with incorrect properties 

	- plus objects are far too large when giving graze and converting bullets to points

		
		
	- boss' hitbox doesn't scale yet 
	- bullets are visible when the height is greater than the width*4/3 below the play aera 

		fixed by rendering a big square below the play area when width is below a certain ratio with the height ->> ctx.fillRect(0,c.height,c.width,-footer); //ln 160 game.js

	- performance problems to do with large number of bullet objects doing maths 
	- different highscores for different gamemodes